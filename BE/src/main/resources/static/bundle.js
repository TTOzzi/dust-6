!function(e){var t={};function s(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,a){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(a,r,function(t){return e[t]}.bind(null,r));return a},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=1)}([function(e,t,s){},function(e,t,s){"use strict";s.r(t);s(0);class a{constructor(){this._observers={fetchData:new Set,scrollBarGraph:new Set,handleForecastAnimation:new Set}}addObserver({type:e,observer:t}){this._observers[e].add(t)}removeObserver({type:e,observer:t}){this._observers[e]=[...this._observers].filter(e=>e!==t)}notify({type:e,data:t}){this._observers[e].forEach(e=>e(t))}}class r{async get(e){const t=await fetch(e);return await t.json()}}const i=(e,t,s)=>e.addEventListener(t,s),n=(e,t)=>e.querySelector(t),d="fetchData",o="scrollBarGraph",l={1:["😀","좋음","#4e8deb"],2:["🙂","보통","#4dd188"],3:["😷","나쁨","#f3ac41"],4:["😱","최악","#d34e44"]},c={CONTAINER:".container",VIEWPORT:".big-screen",NO_GPS:".no-gps",LOADING:".loading"},h={PANEL:".dust__panel",GRAPH:".dust__graph",EMOJI:".grade__emoji",TEXT:".grade__text",DETAILS_VALUE:".details__value",DETAILS_TIME:".details__time"},u={PANEL:".forecast__panel",IMAGES:".forecast__images",CONTROLS:".forecast__controls",BUTTON:".button",BACKGROUND:".background",CONTROLLER:".progress",OVERALL:".forecast__overall",GRADE:".forecast__grade"};var p={dust:{code:200,message:"success",stationName:"종로구",data:[{dataTime:"2020-03-31 14:00",pm10Value:24,pm10Grade:1},{dataTime:"2020-03-31 15:00",pm10Value:50,pm10Grade:2},{dataTime:"2020-03-31 16:00",pm10Value:105,pm10Grade:3},{dataTime:"2020-03-31 17:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-03-31 18:00",pm10Value:55,pm10Grade:2},{dataTime:"2020-03-31 19:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-03-31 20:00",pm10Value:5,pm10Grade:1},{dataTime:"2020-03-31 21:00",pm10Value:31,pm10Grade:1},{dataTime:"2020-03-31 22:00",pm10Value:120,pm10Grade:3},{dataTime:"2020-03-31 23:00",pm10Value:220,pm10Grade:4},{dataTime:"2020-03-31 24:00",pm10Value:105,pm10Grade:2},{dataTime:"2020-04-01 01:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-04-01 02:00",pm10Value:55,pm10Grade:2},{dataTime:"2020-04-01 03:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-04-01 04:00",pm10Value:55,pm10Grade:2},{dataTime:"2020-04-01 05:00",pm10Value:120,pm10Grade:4},{dataTime:"2020-04-01 05:00",pm10Value:175,pm10Grade:4},{dataTime:"2020-04-01 06:00",pm10Value:130,pm10Grade:3},{dataTime:"2020-04-01 07:00",pm10Value:300,pm10Grade:4},{dataTime:"2020-04-01 08:00",pm10Value:10,pm10Grade:1},{dataTime:"2020-04-01 09:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-04-01 10:00",pm10Value:84,pm10Grade:3},{dataTime:"2020-04-01 11:00",pm10Value:100,pm10Grade:3},{dataTime:"2020-04-01 12:00",pm10Value:61,pm10Grade:2}]},forecast:{code:200,message:"success",data:{imageUrls:["http://www.airkorea.or.kr/file/viewImage/?atch_id=56593","http://www.airkorea.or.kr/file/viewImage/?atch_id=56593","http://www.airkorea.or.kr/file/viewImage/?atch_id=56593"],informOverall:"○ [미세먼지] 원활한 대기 확산으로 대기 상태가 '보통' 수준이겠으나, 전일 발원한 황사의 영향으로 일부 남서부지역은 늦은 밤에 농도가 다소 높을 것으로 예상됨",informGrade:"서울 : 보통,제주 : 보통,전남 : 보통,전북 : 보통,광주 : 보통,경남 : 보통,경북 : 보통,울산 : 보통,대구 : 보통,부산 : 보통,충남 : 보통,충북 : 보통,세종 : 보통,대전 : 보통,영동 : 보통,영서 : 보통,경기남부 : 보통,경기북부 : 보통,인천 : 보통"}}};function m(e,{stationName:t,data:s}){return`<div class="page dust">${function(e,{dataTime:t,pm10Value:s,pm10Grade:a}){const r=`<div class="grade__emoji">${l[a][0]}</div>`,i=`<div class="grade__text">${l[a][1]}</div>`,n=`<div class="dust__details"><span>\n\t\t\t<span class="details__value">${s}</span> 𝜇g/m³\n    </span><span class="details__time">${t}</span></div>`,d=`<div class="dust__station">\n\t\t<span class="station__name">${e}</span> 측정소 기준\n\t</div>`;return`<div class="dust__panel" style="background:linear-gradient(${l[a][2]}, #fff);"><h1>미세먼지 앱</h1>${r}${i}${n}${d}</div>`}(t,s[0])}${function(e){return`<div class="dust__graph">${e.reduce((e,{dataTime:t,pm10Value:s,pm10Grade:a})=>e+=`<div class="bar-container" data-time="${t}" data-value="${s}" data-grade="${a}">\n\t\t<div class="bar" style="width:${s/200*100}%; background:${l[a][2]};"></div>\n\t\t<span class="value">${s}</span>\n\t</div>`,"")}<div class="message">🧙‍♂️<br />최근 24시간 동안 기록된 데이터가 제공됩니다.</div></div>`}(s)}</div>`}function f(e,t){return`<div class="page forecast">${function({imageUrls:e,informOverall:t,informGrade:s}){const a=e.reduce((e,t,s)=>e+=`<img src="${t}" alt="forecast image ${s+1}" width="100%"/>`,"");return`<div class="forecast__panel"><h1>미세먼지 예보</h1>${`<div class="forecast__images">${a}</div>`}<div class="forecast__controls"><span class="button">▶️</span><div class="controller__container"><div class="background"></div><div class="progress"></div></div></div>${`<div class="forecast__overall">${t}</div>`}${`<div class="forecast__grade">${s}</div>`}</div>`}(t)}</div>`}const v=document.querySelector("header"),g=v.querySelector(".menu:first-child"),b=v.querySelector(".menu:last-child"),y=document.querySelector(".container");i(v,"touchend",e=>(e=>{const t=e.target.dataset.title;t&&("미세먼지"===t?(y.style.left=0,g.classList.add("selected"),b.classList.remove("selected")):(y.style.left="-100vw",b.classList.add("selected"),g.classList.remove("selected")))})(e));const _=new class extends a{constructor(){super(),this.http=new r,this.indexOfCurrentData=0}fetchData(e,t){this.notify({type:d,data:p.dust}),this.hideLoadingScreen()}handleResponse(e){if(200!==e.code)throw Error(`네트워크 에러 --- ${e.code}`);this.notify({type:d,data:e}),this.hideLoadingScreen()}handleError(e){console.error(e)}showNoGpsScreen(){n(document,c.NO_GPS).style.display="flex"}hideLoadingScreen(){n(document,c.LOADING).style.display="none"}updateDisplayedData(e){this.indexOfCurrentData=e,this.notify({type:o,data:e})}},T=new class extends a{constructor(){super(),this.http=new r}fetchData(){this.notify({type:d,data:p.forecast.data})}handleResponse(e){if(200!==e.code)throw Error(`네트워크 에러 --- ${e.code}`);this.notify({type:d,data:e.data})}handleError(e){console.error(e)}},O=new class{constructor(e){this.dustModel=e,this.dustPanel=null,this.dustGraph=null,this.dustGraphBars=null,this.previousIndexOfBar=0}subscribe(){this.dustModel.addObserver({type:d,observer:this.render}),this.dustModel.addObserver({type:d,observer:this.cacheDomElements.bind(this)}),this.dustModel.addObserver({type:d,observer:this.bindOnScrollListener.bind(this)}),this.dustModel.addObserver({type:o,observer:this.updateDustPanelView.bind(this)})}render(e){const t=m`${e}`;n(document,c.CONTAINER).insertAdjacentHTML("afterbegin",t)}cacheDomElements(){this.dustPanel=n(document,h.PANEL),this.dustGraph=n(document,h.GRAPH),this.dustGraphBars=[...this.dustGraph.children]}updateDustPanelView(e){const t=this.dustGraphBars[e],{grade:s,value:a,time:r}=t.dataset,[i,d,o]=l[s];this.dustPanel.style.background=`linear-gradient(${o}, #fff)`,n(this.dustPanel,h.EMOJI).textContent=i,n(this.dustPanel,h.TEXT).textContent=d,n(this.dustPanel,h.DETAILS_VALUE).textContent=a,n(this.dustPanel,h.DETAILS_TIME).textContent=r}barGraphScrollHandler(e){const t=Math.floor(e/20);t!==this.previousIndexOfBar&&(this.dustModel.updateDisplayedData(t),this.previousIndexOfBar=t)}bindOnScrollListener(){i(this.dustGraph,"scroll",e=>this.barGraphScrollHandler(e.target.scrollTop))}}(_),G=new class{constructor(e){this.forecastModel=e,this.forecastPanel=null,this.forecastImages=null,this.button=null,this.progressBar=null,this.playing=!1,this.currentImgIndex=0,this.timer=null,this.startPoint=null}subscribe(){this.forecastModel.addObserver({type:d,observer:this.render}),this.forecastModel.addObserver({type:d,observer:this.cacheDomElements.bind(this)}),this.forecastModel.addObserver({type:d,observer:this.handleOpacity.bind(this)}),this.forecastModel.addObserver({type:d,observer:this.bindOnClickListener.bind(this)})}render(e){const t=f`${e}`;n(document,c.CONTAINER).insertAdjacentHTML("beforeend",t)}cacheDomElements(){this.forecastPanel=n(document,u.PANEL),this.forecastImages=[...n(this.forecastPanel,u.IMAGES).children],this.button=n(this.forecastPanel,u.BUTTON),this.background=n(this.forecastPanel,u.BACKGROUND),this.progressBar=n(this.forecastPanel,u.CONTROLLER)}handleOpacity(){this.forecastImages.forEach(e=>e.style.opacity=0),this.forecastImages[0].style.opacity=1}buttonTouchHandler(){this.playing||(this.button.textContent="⏸️",this.playing=!0,this.play())}handleProgress(){const e=this.background.offsetWidth,t=Number(this.progressBar.style.width.slice(0,-2));if(t>=e)return void this.stop();const s=e/this.forecastImages.length;this.progressBar.style.width=t+s+"px"}handleImage(){const{forecastImages:e,currentImgIndex:t}=this;if(t===e.length)return this.forecastImages.forEach((e,t)=>e.style.opacity=0===t?1:0),void(this.currentImgIndex=0);this.forecastImages.forEach((e,s)=>e.style.opacity=s===t?1:0),this.currentImgIndex+=1}play(){this.progressBar.style.transition="width 0.3s ease";const e=this;this.timer=setInterval((function(){e.handleProgress.call(e),e.handleImage.call(e)}),300)}stop(){clearInterval(this.timer),this.button.textContent="▶️",this.playing=!1,this.progressBar.style.width="0px"}start(e){this.startPoint=this.background.getBoundingClientRect().x,this.progressBar.style.transition="none"}move(e){const t=this.background.offsetWidth,s=e.touches[0].clientX-this.startPoint;if(s<0||s>this.background.offsetWidth)return;this.progressBar.style.width=s+"px";const a=Number(this.progressBar.style.width.slice(0,-2)),r=t/this.forecastImages.length,i=Math.floor(a/r);this.forecastImages.forEach((e,t)=>e.style.opacity=t===i?1:0),this.handleButton()}handleButton(){Number(this.progressBar.style.width.slice(0,-2))<10?(this.button.textContent="▶️",this.playing=!1):(this.button.textContent="⏸️",this.playing=!0)}bindOnClickListener(){i(this.button,"touchend",()=>this.buttonTouchHandler()),i(this.progressBar,"touchstart",e=>this.start(e)),i(this.progressBar,"touchmove",e=>this.move(e))}}(T);window.addEventListener("DOMContentLoaded",()=>{O.subscribe(),G.subscribe(),_.fetchData(),T.fetchData()})}]);