!function(e){var t={};function a(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=t,a.d=function(e,t,s){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(s,r,function(t){return e[t]}.bind(null,r));return s},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=2)}([function(e,t,a){},function(e,t){const a=document.querySelector("header"),s=a.querySelector(".menu:first-child"),r=a.querySelector(".menu:last-child"),d=document.querySelector(".container");s.addEventListener("touchstart",()=>d.style.left=0,{passive:!1}),r.addEventListener("touchstart",()=>d.style.left="-100vw",{passive:!1})},function(e,t,a){"use strict";a.r(t);a(0);class s{constructor(){this._observers={fetchData:new Set,scrollBarGraph:new Set,handleForecastAnimation:new Set}}addObserver({type:e,observer:t}){this._observers[e].add(t)}removeObserver({type:e,observer:t}){this._observers[e]=[...this._observers].filter(e=>e!==t)}notify({type:e,data:t}){this._observers[e].forEach(e=>e(t))}}class r{async get(e){const t=await fetch(e);return await t.json()}}var d={dust:{code:200,message:"success",stationName:"종로구",data:[{dataTime:"2020-03-31 14:00",pm10Value:24,pm10Grade:1},{dataTime:"2020-03-31 15:00",pm10Value:50,pm10Grade:2},{dataTime:"2020-03-31 16:00",pm10Value:105,pm10Grade:3},{dataTime:"2020-03-31 17:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-03-31 18:00",pm10Value:55,pm10Grade:2},{dataTime:"2020-03-31 19:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-03-31 20:00",pm10Value:5,pm10Grade:1},{dataTime:"2020-03-31 21:00",pm10Value:31,pm10Grade:1},{dataTime:"2020-03-31 22:00",pm10Value:120,pm10Grade:3},{dataTime:"2020-03-31 23:00",pm10Value:220,pm10Grade:4},{dataTime:"2020-03-31 24:00",pm10Value:105,pm10Grade:2},{dataTime:"2020-04-01 01:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-04-01 02:00",pm10Value:55,pm10Grade:2},{dataTime:"2020-04-01 03:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-04-01 04:00",pm10Value:55,pm10Grade:2},{dataTime:"2020-04-01 05:00",pm10Value:120,pm10Grade:4},{dataTime:"2020-04-01 05:00",pm10Value:175,pm10Grade:4},{dataTime:"2020-04-01 06:00",pm10Value:130,pm10Grade:3},{dataTime:"2020-04-01 07:00",pm10Value:300,pm10Grade:4},{dataTime:"2020-04-01 08:00",pm10Value:10,pm10Grade:1},{dataTime:"2020-04-01 09:00",pm10Value:61,pm10Grade:2},{dataTime:"2020-04-01 10:00",pm10Value:84,pm10Grade:3},{dataTime:"2020-04-01 11:00",pm10Value:100,pm10Grade:3},{dataTime:"2020-04-01 12:00",pm10Value:61,pm10Grade:2}]},forecast:{code:200,message:"success",data:{imageUrls:["http://www.airkorea.or.kr/file/viewImage/?atch_id=56593","http://www.airkorea.or.kr/file/viewImage/?atch_id=56593","http://www.airkorea.or.kr/file/viewImage/?atch_id=56593"],informOverall:"○ [미세먼지] 원활한 대기 확산으로 대기 상태가 '보통' 수준이겠으나, 전일 발원한 황사의 영향으로 일부 남서부지역은 늦은 밤에 농도가 다소 높을 것으로 예상됨",informGrade:"서울 : 보통,제주 : 보통,전남 : 보통,전북 : 보통,광주 : 보통,경남 : 보통,경북 : 보통,울산 : 보통,대구 : 보통,부산 : 보통,충남 : 보통,충북 : 보통,세종 : 보통,대전 : 보통,영동 : 보통,영서 : 보통,경기남부 : 보통,경기북부 : 보통,인천 : 보통"}}};const i="fetchData",n="scrollBarGraph",o={1:["😀","좋음","#4e8deb"],2:["🙂","보통","#4dd188"],3:["😷","나쁨","#f3ac41"],4:["😱","최악","#d34e44"]},l={CONTAINER:".container",VIEWPORT:".big-screen",NO_GPS:".no-gps"},u={PANEL:".dust__panel",GRAPH:".dust__graph",EMOJI:".grade__emoji",TEXT:".grade__text",DETAILS_VALUE:".details__value",DETAILS_TIME:".details__time"},c=(e,t)=>e.querySelector(t);function p(e,{stationName:t,data:a}){return`<div class="page dust">${function(e,{dataTime:t,pm10Value:a,pm10Grade:s}){const r=`<div class="grade__emoji">${o[s][0]}</div>`,d=`<div class="grade__text">${o[s][1]}</div>`,i=`<div class="dust__details"><span>\n\t\t\t<span class="details__value">${a}</span> 𝜇g/m³\n    </span><span class="details__time">${t}</span></div>`,n=`<div class="dust__station">\n\t\t<span class="station__name">${e}</span> 측정소 기준\n\t</div>`;return`<div class="dust__panel" style="background:linear-gradient(${o[s][2]}, #fff);"><h1>미세먼지 앱</h1>${r}${d}${i}${n}</div>`}(t,a[0])}${function(e){return`<div class="dust__graph">${e.reduce((e,{dataTime:t,pm10Value:a,pm10Grade:s})=>e+=`<div class="bar-container" data-time="${t}" data-value="${a}" data-grade="${s}">\n\t\t<div class="bar" style="width:${a/200*100}%; background:${o[s][2]};"></div>\n\t\t<span class="value">${a}</span>\n\t</div>`,"")}</div>`}(a)}</div>`}a(1);const m=new class extends s{constructor(){super(),this.indexOfCurrentData=0}getGeoLocation(){this.displayedData=d.dust.data[0],this.notify({type:i,data:d.dust})}success(e){const{latitude:t,longitude:a}=e.coords,s=`http://34.23.92:8080/api*/dust-status*/location?latitude=${t}&longitude=${a}`;(new r).get(s).then(e=>console.log(e))}error(e){e.code==e.PERMISSION_DENIED&&this.showNoGpsScreen()}showNoGpsScreen(){c(document,l.VIEWPORT).style.display="flex"}updateDisplayedData(e){this.indexOfCurrentData=e,this.notify({type:n,data:e})}},h=new class extends s{constructor(){super()}fetchData(){}},f=new class{constructor(e){this.dustModel=e,this.dustPanel=null,this.dustGraph=null,this.dustGraphBars=null}subscribe(){this.dustModel.addObserver({type:i,observer:this.render}),this.dustModel.addObserver({type:i,observer:this.cacheDomElements.bind(this)}),this.dustModel.addObserver({type:n,observer:this.updateDustPanelView.bind(this)})}render(e){const t=p`${e}`;c(document,l.CONTAINER).insertAdjacentHTML("afterbegin",t)}cacheDomElements(){this.dustPanel=c(document,u.PANEL),this.dustGraph=c(document,u.GRAPH),this.dustGraphBars=[...this.dustGraph.children]}updateDustPanelView(e){const t=this.dustGraphBars[e],{grade:a,value:s,time:r}=t.dataset,[d,i,n]=o[a];this.dustPanel.style.background=`linear-gradient(${n}, #fff)`,c(this.dustPanel,u.EMOJI).textContent=d,c(this.dustPanel,u.TEXT).textContent=i,c(this.dustPanel,u.DETAILS_VALUE).textContent=s,c(this.dustPanel,u.DETAILS_TIME).textContent=r}bindOnScrollListener(e){((e,t,a)=>{e.addEventListener(t,a)})(this.dustGraph,"scroll",t=>e(t.target.scrollTop))}}(m),v=new class{constructor(e){this.forecastModel=e}subscribe(){}showLatestData(e){console.log("forecastView notified!",e)}}(h),b=new class{constructor(e,t){this.dustModel=e,this.dustView=t,this.previousIndexOfBar=0}barGraphScrollHandler(e){const t=Math.floor(e/20);t!==this.previousIndexOfBar&&(this.dustModel.updateDisplayedData(t),this.previousIndexOfBar=t)}init(){this.dustView.subscribe(),this.dustModel.getGeoLocation(),this.dustView.bindOnScrollListener(this.barGraphScrollHandler.bind(this))}}(m,f),_=new class{constructor(e,t){this.forecastModel=e,this.forecastView=t}playButtonHandler(){}progressBarHandler(){}init(){this.forecastView.subscribe(),this.forecastModel.fetchData()}}(h,v);window.addEventListener("DOMContentLoaded",()=>{b.init(),_.init()})}]);